# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

# default rules
homepage:
  url:   /
  param: { module: home, action: index }

static:
  url:   /static
  param: { module: static, action: index }

homepage_bind:
  url:   /form
  param: { module: home, action: bindForm }

homepage_search:
  url:   /search/:search_string
  param: { module: home, action: index }

homepage_modal:
  url:   /scene/:scene_id
  param: { module: home, action: index, modal: true }
  requirements:
    scene_id: \d+

### HOMEPAGE AJAX ###

homepage_page:
  url:   /page/:page
  param: { module: home, action: index }
  requirements:
    page: \d+

homepage_search_page:
  url:   /search/:search_string/page/:page
  param: { module: home, action: index }
  requirements:
    page: \d+

### STICKER AJAX ###

sticker_scene_change:
  url:   /scene/sticker/:scene_id
  param: { module: board, action: showSceneAjax }
  requirements:
    scene_id: \d+

### FOLLOW ###

follow_user:
  url:  /follow/user/:user_id
  param: { module: user, action: followUser }

unfollow_user:
  url:  /unfollow/user/:user_id
  param: { module: user, action: unfollowUser }

follow_clip:
  url:  /follow/clip/:clip_id
  param: { module: user, action: followClip }

unfollow_clip:
  url:  /unfollow/clip/:clip_id
  param: { module: user, action: unfollowClip }

follow_board:
  url:  /follow/set/:board_id
  param: { module: user, action: followBoard }

unfollow_board:
  url:  /unfollow/set/:board_id
  param: { module: user, action: unfollowBoard }

### SCENE ###

scene_unrepin:
  url: /scene/unreclip
  param: { module: scene, action: unrepin }

scene_repin:
  url: /scene/reclip
  param: { module: scene, action: repin }

scene_post:
  url: /post/scene
  param: { module: scene, action: postScene }

scene_change_liked_state:
  url: /change/scene/like/state
  param: { module: scene, action: toggleFBLikeState }

scene_post_comment_rating:
  url: /post/scene/comment/rating
  param: { module: scene, action: postCommentRating }
  requirements:
    id: \d+

scene_post_comment:
  url: /post/scene/comment/:sticker
  param: { module: scene, action: postComment, sticker: '' }

### STICKER AJAX ###

scene_change:
  url:   /scene/:scene_id/:modal
  param: { module: scene, action: showSceneAjax, modal: false }
  requirements:
    scene_id: \d+
    modal: \d+

### USER ###

user:
  url:   /profile/:nick
  class: sfPropelRoute
  param: { module: user, action: scenes }
  options: { model: sfGuardUserProfile, type: object, segment_separators: [/] }

edit_user:
  url:   /edit/profile/:user_id
  class: sfPropelRoute
  param: { module: user, action: show }
  options: { model: sfGuardUserProfile, type: object }
  requirements:
    user_id: \d+

invites_callback:
  url: /invites/send
  param: { module: user, action: invites }
  sf_method: [post]

board_vote:
  url:   /vote/board/:id
  param: { module: board, action: vote }
  requirements:
    id: \d+

### MY ###

my_boards:
  url:   /profile/:nick/channels
  class: sfPropelRoute
  param: { module: user, action: boards }
  options: { model: sfGuardUserProfile, type: object, segment_separators: [/] }

my_boards_page:
  url:   /profile/:nick/channels/page/:page
  class: sfPropelRoute
  param: { module: user, action: boards, page: '' }
  options: { model: sfGuardUserProfile, type: object, segment_separators: [/] }

my_scenes:
  url:   /profile/:nick/clips
  class: sfPropelRoute
  param: { module: user, action: scenes }
  options: { model: sfGuardUserProfile, type: object, segment_separators: [/] }

my_clips_page:
  url:   /profile/:nick/clips/page/:page
  class: sfPropelRoute
  param: { module: user, action: scenes, page: '' }
  options: { model: sfGuardUserProfile, type: object, segment_separators: [/] }

my_likes:
  url:   /profile/:nick/likes
  class: sfPropelRoute
  param: { module: user, action: likes }
  options: { model: sfGuardUserProfile, type: object, segment_separators: [/] }

my_likes_page:
  url:   /profile/:nick/likes/page/:page
  class: sfPropelRoute
  param: { module: user, action: likes, page: '' }
  options: { model: sfGuardUserProfile, type: object, segment_separators: [/] }

my_comments:
  url:   /profile/:nick/comments
  class: sfPropelRoute
  param: { module: user, action: comments }
  options: { model: sfGuardUserProfile, type: object, segment_separators: [/] }

my_comments_page:
  url:   /profile/:nick/comments/page/:page
  class: sfPropelRoute
  param: { module: user, action: comments, page: '' }
  options: { model: sfGuardUserProfile, type: object, segment_separators: [/] }

### LISTINGS ###

list_followers:
  url: /profile/:nick/list/followers
  class: sfPropelRoute
  param: { module: list, action: showListing, type: 'followers' }
  options: { model: sfGuardUserProfile, type: object, segment_separators: [/] }

list_followings:
  url: /profile/:nick/list/following
  class: sfPropelRoute
  param: { module: list, action: showListing, type: 'followings' }
  options: { model: sfGuardUserProfile, type: object, segment_separators: [/] }


list_likes:
  url:   /:username_slug/board/:board_id/scene/:id/list/likes
  class: sfPropelRoute
  param: { module: list, action: showListing, type: 'scene_likes' }
  options: { model: Scene, type: object, segment_separators: [/] }
  requirements:
    board_id: \d+
    id: \d+

list_repins:
  url:   /:username_slug/board/:board_id/scene/:id/list/reclips
  class: sfPropelRoute
  param: { module: list, action: showListing, type: 'scene_repins' }
  options: { model: Scene, type: object, segment_separators: [/] }
  requirements:
    board_id: \d+
    id: \d+

list_comments:
  url:   /:username_slug/board/:board_id/scene/:id/list/comments
  class: sfPropelRoute
  param: { module: list, action: showListing, type: 'scene_comments' }
  options: { model: Scene, type: object, segment_separators: [/] }
  requirements:
    board_id: \d+
    id: \d+

### MELODY CALLBACKS ###

user_register:
  url:   /user/register
  param: { module: user, action: register }

user_register_welcome:
  url:   /user/welcome
  param: { module: user, action: welcome }

### MELODY ROUTINE ###

connect_fb:
  url:   /connect_fb/*
  param: { module: user, action: connect }

callback_fb:
  url:   /callback_fb
  param: { module: user, action: facebook}

sf_guard_signout:
  url:   /logout
  param: { module: sfGuardAuth, action: signout }

### ADD NEW CLIP ###

preview_new_clip:
  url:  /preview
  param: { module: static, action: previewNew}

new_clip_scene_post:
  url:  /preview/create
  param: { module: static, action: newClipPostScene}

facebook_canvas:
  url:   /canvas/facebook/*
  param: { module: static, action: facebookCanvas }


### BOARD ###

edit_board:
  url:   /edit/board/:board_id
  class: sfPropelRoute
  param: { module: board, action: show }
  options: { model: Board, type: object }
  requirements:
    board_id: \d+

board:
  url:   /:username_slug/board/:id
  class: sfPropelRoute
  param: { module: board, action: show }
  options: { model: Board, type: object, segment_separators: [/] }
  requirements:
    id: \d+

board_page:
  url:   /:username_slug/board/:id/page/:page
  class: sfPropelRoute
  param: { module: board, action: show, page: 0 }
  options: { model: Board, type: object, segment_separators: [/] }
  requirements:
    id: \d+
    page: \d+


### SCENE ###

scene:
  url:   /:username_slug/board/:board_id/scene/:id
  class: sfPropelRoute
  param: { module: scene, action: show }
  options: { model: Scene, type: object, segment_separators: [/] }
  requirements:
    board_id: \d+
    id: \d+